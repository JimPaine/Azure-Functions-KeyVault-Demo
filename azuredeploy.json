{
    "$schema": "http://schemas.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceName": {
            "type": "string",
            "metadata": {
                "description": "Resource name and prefix for all resources"
            }
        },
        "secret" : {
            "type": "string",
            "metadata": {
                "description": "The value to store in Key Vault for the function to return"
            }
        }
    },
    "variables": {
        "functionName": "[parameters('resourceName')]",
        "planName": "[concat(parameters('resourceName'), 'plan')]",
        "vaultName": "[concat(parameters('resourceName'), 'vault')]",
        "secret": "secret",
        "configName": "[concat(parameters('resourceName'), '/appsettings')]",
        "repoURL": "https://github.com/JimPaine/Azure-Functions-KeyVault-Demo.git",
        "storageAccountName": "[concat('storage', uniquestring(resourceGroup().id))]",
        "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2018-07-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage"
        },       
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2016-09-01",
            "name": "[variables('planName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
            },
            "properties": {
                "name": "[variables('planName')]"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "name": "[variables('functionName')]",
            "apiVersion": "2016-08-01",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "kind": "functionapp",
            "properties": {
                "name": "[variables('functionName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~1"
                        },
                        {
                            "name": "WEBJOBS_IDLE_TIMEOUT",
                            "value": "120"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('functionName'))]"
                        },
                        {
                            "name": "[variables('secret')]",
                            "value": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('vaultName'), variables('secret'))).secretUriWithVersion, ')')]"
                        }
                    ]
                }                
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('vaultName'), variables('secret'))]"
            ],
            "resources": [
                {
                    "apiVersion": "2015-08-01",
                    "name": "web",
                    "type": "sourcecontrols",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('functionName'))]"
                    ],
                    "properties": {
                        "RepoUrl": "[variables('repoURL')]",
                        "branch": "master",
                        "IsManualIntegration": true
                    }
                }
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[variables('vaultName')]",
            "apiVersion": "2016-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [],
                "enabledForTemplateDeployment": true
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/accessPolicies",
            "name": "[concat(variables('vaultName'), '/add')]",
            "apiVersion": "2018-02-14",
            "properties": {
                "accessPolicies": [
                    {
                        "tenantId": "[reference(concat('Microsoft.Web/sites/', variables('functionName')), '2018-02-01', 'Full').identity.tenantId]",
                        "objectId": "[reference(concat('Microsoft.Web/sites/', variables('functionName')), '2018-02-01', 'Full').identity.principalId]",
                        "permissions": {
                            "keys": [],
                            "secrets": [
                                "get",
                                "list"
                            ],
                            "certificates": []
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('functionName'))]"
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(variables('vaultName'), '/', variables('secret'))]",
            "apiVersion": "2016-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "contentType": "text/plain",
                "value": "[parameters('secret')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]"
            ]
        }
    ]
}